%%{
/*
 * Copyright (c) 2018-2019, Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/*
 *  ======== ADCMSP432.Board.c.xdt ========
 */

    /* passed by /ti/drivers/templates/Board.c.xdt */
    let ADC = args[0];
    let instances = ADC.$instances;
    if (instances.length == 0) return;

    /* CONFIG_XXXCOUNT string, derived from defaultInstanceName */
    let countDef = ADC.defaultInstanceName + "COUNT";

    let map = {
        "External Buffered" : "ADCMSP432_REF_VOLTAGE_EXT_BUF",
        "External"          : "ADCMSP432_REF_VOLTAGE_EXT",
        "2.5V"              : "ADCMSP432_REF_VOLTAGE_INT_2_5V",
        "1.45V"             : "ADCMSP432_REF_VOLTAGE_INT_1_45V",
        "1.2V"              : "ADCMSP432_REF_VOLTAGE_INT_1_2V",
        "VDD"               : "ADCMSP432_REF_VOLTAGE_VDD",
        "8 Bits"            : "ADC_8BIT",
        "10 Bits"           : "ADC_10BIT",
        "12 Bits"           : "ADC_12BIT",
        "14 Bits"           : "ADC_14BIT"
    };
%%}
/*
 *  =============================== ADC ===============================
 */

#include <ti/drivers/ADC.h>
#include <ti/drivers/adc/ADCMSP432.h>

#include <ti/devices/msp432p4xx/inc/msp.h>
#include <ti/devices/msp432p4xx/driverlib/adc14.h>
#include <ti/devices/msp432p4xx/driverlib/ref_a.h>

#define `countDef` `instances.length`

/*
 *  ======== adcMSP432Objects ========
 */
ADCMSP432_Object adcMSP432Objects[`countDef`];

/*
 *  ======== adcMSP432HWAttrs ========
 */
const ADCMSP432_HWAttrsV1 adcMSP432HWAttrs[`countDef`] = {
% for (let i = 0; i < instances.length; i++) {
    % let inst = instances[i];
    % let adcPin = "ADCMSP432_" + ADC._getAdcPinName(inst);
    /* `inst.$name` */
    % if (inst.$hardware) {
    %    if (inst.$hardware.displayName) {
    /* `inst.$hardware.displayName` */
    %    }
    % }
    {
        .adcPin = `adcPin`,
        .refVoltage = `map[inst.referenceVoltage]`,
        .resolution = `map[inst.resolution]`,
        .refExtValue = `inst.externalReferenceVoltage`
    },
% }
};

/*
 *  ======== ADC_config ========
 */
const ADC_Config ADC_config[`countDef`] = {
% for (let i = 0; i < instances.length; i++) {
    % let inst = instances[i];
    /* `inst.$name` */
    % if (inst.$hardware) {
    %    if (inst.$hardware.displayName) {
    /* `inst.$hardware.displayName` */
    %    }
    % }
    {
        .fxnTablePtr = &ADCMSP432_fxnTable,
        .object = &adcMSP432Objects[`inst.$name`],
        .hwAttrs = &adcMSP432HWAttrs[`inst.$name`]
    },
% }
};

const uint_least8_t ADC_count = `countDef`;
